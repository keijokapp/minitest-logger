/*
 * autogenerated *

AuthView: view of AuthController

<div>
    {uname}:{passwd}@{server};
    <input type="text" data-action="server" placeholder="server"/>
</div>

*/


import View from './View';


var html =
    '{uname}:{passwd}@{server}:' +
    '<input type="text" placeholder="server">';

var bindingFunctions = [
    function(model) {
        this.nodes[0].nodeValue = model.get('uname') + ':' + model.get('passwd') + '@' + model.get('server');
    }
];

var bindings = {
    'server': bindingFunctions[0],
    'uname': bindingFunctions[0],
    'passwd': bindingFunctions[0],
};


var clone = function(model) {
    var _this = this;
    var cloned = template.clone(true);
    var nodes = Array.prototype.slice.call(cloned.childNodes, 0);
    nodes[1].addEventListener('change', function() { model.set('server', this.value); });
    model.on('set', function(pairs) {
			
    });
};


var template = document.createElement('div');
template.innerHTML = html;

export default AuthView = View.extend({
    construct: function(controller, placeholder) {
        console.assert(controller instanceof AuthController);

        if(!template) {
            AuthView.build();
        }


        this._super.construct(controller, placeholder);
    }
});
